{"version":3,"sources":["../../src/api/type.ts"],"sourcesContent":["import { FarmRewardInfo, FarmVersion } from \"../raydium/farm\";\r\n\r\n/* ================= liquidity ================= */\r\nexport type LiquidityVersion = 4 | 5;\r\n\r\nexport interface ApiPoolInfoV4 {\r\n  id: string;\r\n  baseMint: string;\r\n  quoteMint: string;\r\n  lpMint: string;\r\n  baseDecimals: number;\r\n  quoteDecimals: number;\r\n  lpDecimals: number;\r\n  version: 4;\r\n  programId: string;\r\n  authority: string;\r\n  openOrders: string;\r\n  targetOrders: string;\r\n  baseVault: string;\r\n  quoteVault: string;\r\n  withdrawQueue: string;\r\n  lpVault: string;\r\n  marketVersion: 3;\r\n  marketProgramId: string;\r\n  marketId: string;\r\n  marketAuthority: string;\r\n  marketBaseVault: string;\r\n  marketQuoteVault: string;\r\n  marketBids: string;\r\n  marketAsks: string;\r\n  marketEventQueue: string;\r\n  lookupTableAccount: string;\r\n}\r\n\r\n/* ================= farm ================= */\r\nexport interface FarmRewardInfoV6 {\r\n  rewardMint: string;\r\n  rewardVault: string;\r\n  rewardOpenTime: number;\r\n  rewardEndTime: number;\r\n  rewardPerSecond: number;\r\n  rewardSender: string;\r\n}\r\n\r\nexport interface ApiStakePoolInfo {\r\n  // base\r\n  id: string;\r\n  symbol: string;\r\n  lpMint: string;\r\n  // version\r\n  version: FarmVersion;\r\n  programId: string;\r\n  // keys\r\n  authority: string;\r\n  lpVault: string;\r\n  rewardInfos: FarmRewardInfo[] | FarmRewardInfoV6[];\r\n  // status\r\n  upcoming: boolean;\r\n}\r\n\r\nexport interface ApiClmmConfigInfo {\r\n  id: string;\r\n  index: number;\r\n  protocolFeeRate: number;\r\n  tradeFeeRate: number;\r\n  tickSpacing: number;\r\n  fundFeeRate: number;\r\n  defaultRange: number;\r\n  defaultRangePoint: number[];\r\n}\r\n\r\nexport interface ApiCpmmConfigInfo {\r\n  id: string;\r\n  index: number;\r\n  protocolFeeRate: number;\r\n  tradeFeeRate: number;\r\n  fundFeeRate: number;\r\n  createPoolFee: string;\r\n}\r\n\r\nexport interface ApiClmmPoolsItemStatistics {\r\n  volume: number;\r\n  volumeFee: number;\r\n  feeA: number;\r\n  feeB: number;\r\n  feeApr: number;\r\n  rewardApr: {\r\n    A: number;\r\n    B: number;\r\n    C: number;\r\n  };\r\n  apr: number;\r\n  priceMin: number;\r\n  priceMax: number;\r\n}\r\n\r\nexport interface CpmmLockInfo {\r\n  name: string;\r\n  symbol: string;\r\n  description: string;\r\n  external_url: string;\r\n  collection: {\r\n    name: string;\r\n    family: string;\r\n  };\r\n  image: string;\r\n  poolInfo: ApiV3PoolInfoStandardItemCpmm;\r\n  positionInfo: {\r\n    tvlPercentage: number;\r\n    usdValue: number;\r\n    amountA: number;\r\n    amountB: number;\r\n    unclaimedFee: {\r\n      lp: number;\r\n      amountA: number;\r\n      amountB: number;\r\n      usdValue: number;\r\n    };\r\n  };\r\n}\r\n\r\n/** ====== v3 api types ======= */\r\nexport interface ApiV3PageIns<T> {\r\n  count: number;\r\n  hasNextPage: boolean;\r\n  data: T[];\r\n}\r\n\r\nexport enum JupTokenType {\r\n  ALL = \"all\",\r\n  Strict = \"strict\",\r\n}\r\nexport type PoolsApiReturn = ApiV3PageIns<ApiV3PoolInfoItem>;\r\n\r\nexport interface TransferFeeDataBaseType {\r\n  transferFeeConfigAuthority: string;\r\n  withdrawWithheldAuthority: string;\r\n  withheldAmount: string;\r\n  olderTransferFee: {\r\n    epoch: string;\r\n    maximumFee: string;\r\n    transferFeeBasisPoints: number;\r\n  };\r\n  newerTransferFee: {\r\n    epoch: string;\r\n    maximumFee: string;\r\n    transferFeeBasisPoints: number;\r\n  };\r\n}\r\n\r\nexport type ExtensionsItem = {\r\n  coingeckoId?: string;\r\n  feeConfig?: TransferFeeDataBaseType;\r\n};\r\n\r\nexport type ApiV3Token = {\r\n  chainId: number;\r\n  address: string;\r\n  programId: string;\r\n  logoURI: string;\r\n  symbol: string;\r\n  name: string;\r\n  decimals: number;\r\n  tags: string[]; // \"hasFreeze\" | \"hasTransferFee\" | \"token-2022\" | \"community\" | \"unknown\" ..etc\r\n  extensions: ExtensionsItem;\r\n  freezeAuthority?: string;\r\n  mintAuthority?: string;\r\n};\r\n\r\nexport type JupToken = {\r\n  address: string;\r\n  name: string;\r\n  symbol: string;\r\n  decimals: number;\r\n  logoURI: string;\r\n  tags: string[];\r\n  daily_volume: number;\r\n  created_at: string;\r\n  freeze_authority: string | null;\r\n  mint_authority: string | null;\r\n  permanent_delegate: string | null;\r\n  minted_at: string;\r\n  extensions: ExtensionsItem;\r\n};\r\n\r\nexport type ApiV3TokenRes = {\r\n  mintList: ApiV3Token[];\r\n  blacklist: string[];\r\n  whiteList: string[];\r\n};\r\n\r\nexport interface ApiV3PoolInfoCountItem {\r\n  volume: number;\r\n  volumeQuote: number;\r\n  volumeFee: number;\r\n  apr: number;\r\n  feeApr: number;\r\n  priceMin: number;\r\n  priceMax: number;\r\n  rewardApr: number[];\r\n}\r\n\r\ntype PoolTypeItem = \"StablePool\" | \"OpenBookMarket\";\r\n\r\ntype FarmRewardInfoOld = {\r\n  mint: ApiV3Token;\r\n  perSecond: number;\r\n};\r\n\r\nexport type PoolFarmRewardInfo = FarmRewardInfoOld & {\r\n  startTime?: number;\r\n  endTime?: number;\r\n};\r\n\r\nexport interface PoolRewardInfoItem {\r\n  mint: ApiV3Token;\r\n  perSecond?: number;\r\n  startTime?: number;\r\n  endTime?: number;\r\n}\r\n\r\nexport interface ApiV3PoolInfoBaseItem {\r\n  programId: string;\r\n  id: string;\r\n  mintA: ApiV3Token;\r\n  mintB: ApiV3Token;\r\n  rewardDefaultInfos: PoolFarmRewardInfo[];\r\n  rewardDefaultPoolInfos: \"Ecosystem\" | \"Fusion\" | \"Raydium\" | \"Clmm\";\r\n  price: number;\r\n  mintAmountA: number;\r\n  mintAmountB: number;\r\n  feeRate: number;\r\n  openTime: string;\r\n  tvl: number;\r\n\r\n  day: ApiV3PoolInfoCountItem;\r\n  week: ApiV3PoolInfoCountItem;\r\n  month: ApiV3PoolInfoCountItem;\r\n  pooltype: PoolTypeItem[];\r\n\r\n  farmUpcomingCount: number;\r\n  farmOngoingCount: number;\r\n  farmFinishedCount: number;\r\n\r\n  burnPercent: number;\r\n}\r\nexport type ApiV3PoolInfoConcentratedItem = ApiV3PoolInfoBaseItem & {\r\n  type: \"Concentrated\";\r\n  config: ApiClmmConfigV3;\r\n};\r\nexport type ApiV3PoolInfoStandardItem = ApiV3PoolInfoBaseItem & {\r\n  type: \"Standard\";\r\n  marketId: string;\r\n  configId: string;\r\n  lpPrice: number;\r\n  lpAmount: number;\r\n  lpMint: ApiV3Token;\r\n};\r\n\r\nexport type ApiV3PoolInfoStandardItemCpmm = ApiV3PoolInfoBaseItem & {\r\n  type: \"Standard\";\r\n  lpMint: ApiV3Token;\r\n  lpPrice: number;\r\n  lpAmount: number;\r\n  config: ApiCpmmConfigV3;\r\n};\r\n\r\nexport type ApiV3PoolInfoItem =\r\n  | ApiV3PoolInfoConcentratedItem\r\n  | ApiV3PoolInfoStandardItem\r\n  | ApiV3PoolInfoStandardItemCpmm;\r\n\r\nexport enum PoolFetchType {\r\n  All = \"all\",\r\n  Standard = \"standard\",\r\n  Concentrated = \"concentrated\",\r\n  AllFarm = \"allFarm\",\r\n  StandardFarm = \"standardFarm\",\r\n  ConcentratedFarm = \"concentratedFarm\",\r\n}\r\n\r\nexport interface FetchPoolParams {\r\n  type?: PoolFetchType;\r\n  sort?:\r\n    | \"liquidity\"\r\n    | \"volume24h\"\r\n    | \"volume7d\"\r\n    | \"volume30d\"\r\n    | \"fee24h\"\r\n    | \"fee7d\"\r\n    | \"fee30d\"\r\n    | \"apr24h\"\r\n    | \"apr7d\"\r\n    | \"apr30d\";\r\n  order?: \"desc\" | \"asc\";\r\n  pageSize?: number;\r\n  page?: number;\r\n}\r\n\r\n// liquidity line\r\nexport interface Point {\r\n  time: number;\r\n  liquidity: number;\r\n}\r\nexport interface LiquidityLineApi {\r\n  count: number;\r\n  line: Point[];\r\n}\r\n\r\n// pool key\r\n\r\ninterface Base {\r\n  programId: string;\r\n  id: string;\r\n  mintA: ApiV3Token;\r\n  mintB: ApiV3Token;\r\n  lookupTableAccount?: string;\r\n  openTime: string;\r\n  vault: { A: string; B: string };\r\n}\r\ninterface _Amm {\r\n  authority: string;\r\n  openOrders: string;\r\n  targetOrders: string;\r\n  mintLp: ApiV3Token;\r\n}\r\n\r\ninterface ApiCpmmConfigV3 {\r\n  id: string;\r\n  index: number;\r\n  protocolFeeRate: number;\r\n  tradeFeeRate: number;\r\n  fundFeeRate: number;\r\n  createPoolFee: string;\r\n}\r\n\r\ninterface _Cpmm {\r\n  authority: string;\r\n  mintLp: ApiV3Token;\r\n  config: ApiCpmmConfigV3;\r\n  observationId: string;\r\n}\r\ninterface _Market {\r\n  marketProgramId: string;\r\n  marketId: string;\r\n  marketAuthority: string;\r\n  marketBaseVault: string;\r\n  marketQuoteVault: string;\r\n  marketBids: string;\r\n  marketAsks: string;\r\n  marketEventQueue: string;\r\n}\r\nexport type AmmV4Keys = Base & _Amm & _Market;\r\nexport type AmmV5Keys = Base & _Amm & _Market & { modelDataAccount: string };\r\nexport type CpmmKeys = Base & _Cpmm;\r\nexport interface ClmmRewardType {\r\n  mint: ApiV3Token;\r\n  vault: string;\r\n}\r\nexport type ClmmKeys = Base & {\r\n  config: ApiClmmConfigV3;\r\n  rewardInfos: ClmmRewardType[];\r\n  observationId: string;\r\n  exBitmapAccount: string;\r\n};\r\nexport type PoolKeys = AmmV4Keys | AmmV5Keys | ClmmKeys | CpmmKeys;\r\n\r\n// clmm config\r\nexport interface ApiClmmConfigV3 {\r\n  id: string;\r\n  index: number;\r\n  protocolFeeRate: number;\r\n  tradeFeeRate: number;\r\n  tickSpacing: number;\r\n  fundFeeRate: number;\r\n  description: string;\r\n  defaultRange: number;\r\n  defaultRangePoint: number[];\r\n}\r\n\r\nexport interface RpcItemA {\r\n  url: string;\r\n  weight: number;\r\n  batch: boolean;\r\n  name: string;\r\n}\r\nexport interface RpcItemB {\r\n  url: string;\r\n  batch: boolean;\r\n  name: string;\r\n}\r\n\r\ntype RpcStrategy = \"speed\" | \"first\";\r\ntype RpcTypeWeight = { strategy: \"weight\"; rpcs: RpcItemA[] };\r\ntype RpcTypeOther = { strategy: RpcStrategy; rpcs: RpcItemB[] };\r\nexport type RpcType = RpcTypeWeight | RpcTypeOther;\r\n\r\nexport type FarmRewardTypeV6Key = \"Standard SPL\" | \"Option tokens\";\r\n\r\nexport interface RewardKeyInfoV345 {\r\n  mint: ApiV3Token;\r\n  vault: string;\r\n  type: FarmRewardTypeV6Key;\r\n  perSecond: number;\r\n  perBlock: number;\r\n}\r\nexport interface RewardKeyInfoV6 {\r\n  mint: ApiV3Token;\r\n  vault: string;\r\n  type: FarmRewardTypeV6Key;\r\n  perSecond: number;\r\n  openTime: string;\r\n  endTime: string;\r\n  sender: string;\r\n}\r\ninterface FormatFarmKeyOutBase {\r\n  programId: string;\r\n  id: string;\r\n  symbolMints: ApiV3Token[];\r\n  lpMint: ApiV3Token;\r\n  authority: string;\r\n  lpVault: string;\r\n}\r\nexport type FormatFarmKeyOutV345 = FormatFarmKeyOutBase & {\r\n  rewardInfos: RewardKeyInfoV345[];\r\n};\r\nexport type FormatFarmKeyOutV6 = FormatFarmKeyOutBase & {\r\n  config: {\r\n    periodMax: number;\r\n    periodMin: number;\r\n    periodExtend: number;\r\n  };\r\n  rewardInfos: RewardKeyInfoV6[];\r\n};\r\nexport type FormatFarmKeyOut = FormatFarmKeyOutV345 | FormatFarmKeyOutV6;\r\n// item page farm info\r\n// farm info\r\nexport interface RewardInfoV345 {\r\n  mint: ApiV3Token;\r\n  type: FarmRewardTypeV6Key;\r\n  apr: number;\r\n  perSecond: string;\r\n}\r\nexport interface RewardInfoV6 {\r\n  mint: ApiV3Token;\r\n  type: FarmRewardTypeV6Key;\r\n  apr: number;\r\n  perSecond: string;\r\n  openTime: string;\r\n  endTime: string;\r\n}\r\nexport type FarmTagsItem = \"Ecosystem\" | \"Farm\" | \"Fusion\" | \"Stake\";\r\nexport interface FormatFarmInfoOutBase {\r\n  programId: string;\r\n  id: string;\r\n  symbolMints: ApiV3Token[];\r\n  lpMint: ApiV3Token;\r\n  tvl: number;\r\n  lpPrice: number;\r\n  apr: number;\r\n  tags: FarmTagsItem[];\r\n}\r\nexport type FormatFarmInfoOutV345 = FormatFarmInfoOutBase & {\r\n  rewardInfos: RewardInfoV345[];\r\n};\r\nexport type FormatFarmInfoOutV6 = FormatFarmInfoOutBase & {\r\n  rewardInfos: RewardInfoV6[];\r\n};\r\nexport type FormatFarmInfoOut = FormatFarmInfoOutV345 | FormatFarmInfoOutV6;\r\n\r\nexport interface AvailabilityCheckAPI3 {\r\n  all: boolean;\r\n  swap: boolean;\r\n  createConcentratedPosition: boolean;\r\n  addConcentratedPosition: boolean;\r\n  addStandardPosition: boolean;\r\n  removeConcentratedPosition: boolean;\r\n  removeStandardPosition: boolean;\r\n  addFarm: boolean;\r\n  removeFarm: boolean;\r\n}\r\n\r\nexport type OwnerCreatedFarmInfo = {\r\n  farm: { id: string; programId: string }[];\r\n  clmm: { id: string; programId: string }[];\r\n};\r\n\r\nexport type OwnerIdoInfo = Record<\r\n  string,\r\n  {\r\n    programId: string;\r\n    poolId: string;\r\n    coin: string;\r\n    pc: string;\r\n  }\r\n>;\r\n\r\nexport type IdoKeysData = {\r\n  programId: string;\r\n  id: string;\r\n  authority: string;\r\n  projectInfo: {\r\n    mint: ApiV3Token;\r\n    vault: string;\r\n  };\r\n  buyInfo: {\r\n    mint: ApiV3Token;\r\n    vault: string;\r\n  };\r\n};\r\n\r\nexport interface ApiStakePool {\r\n  programId: string;\r\n  id: string;\r\n  apr: number;\r\n  lpMint: ApiV3Token;\r\n  lpPrice: number;\r\n  symbolMints: ApiV3Token[];\r\n  tvl: number;\r\n  tags: FarmTagsItem[];\r\n  rewardInfos: RewardInfoV345[];\r\n}\r\n\r\nexport type FarmPositionData = Record<\r\n  string,\r\n  Record<\r\n    string,\r\n    Record<\r\n      string,\r\n      {\r\n        programId: string;\r\n        lpAmount: string;\r\n        version: \"V1\" | \"V2\";\r\n      }\r\n    >\r\n  >\r\n>;\r\n"],"mappings":"4ZAAA,2EAgIO,GAAK,GAAL,CAAK,GACV,OAAM,MACN,SAAS,SAFC,WAgJA,EAAL,CAAK,GACV,OAAM,MACN,WAAW,WACX,eAAe,eACf,UAAU,UACV,eAAe,eACf,mBAAmB,mBANT","names":[]}