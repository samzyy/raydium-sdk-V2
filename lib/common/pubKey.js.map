{"version":3,"sources":["../../src/common/pubKey.ts"],"sourcesContent":["import { AccountMeta, PublicKey, SystemProgram, SYSVAR_RENT_PUBKEY } from \"@solana/web3.js\";\r\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\r\n\r\ninterface AccountMetaProps {\r\n  pubkey: PublicKey;\r\n  isSigner?: boolean;\r\n  isWritable?: boolean;\r\n}\r\n\r\nexport function accountMeta({ pubkey, isSigner = false, isWritable = true }: AccountMetaProps): AccountMeta {\r\n  return {\r\n    pubkey,\r\n    isWritable,\r\n    isSigner,\r\n  };\r\n}\r\n\r\nexport const commonSystemAccountMeta = [\r\n  accountMeta({ pubkey: TOKEN_PROGRAM_ID, isWritable: false }),\r\n  accountMeta({ pubkey: SystemProgram.programId, isWritable: false }),\r\n  accountMeta({ pubkey: SYSVAR_RENT_PUBKEY, isWritable: false }),\r\n];\r\n\r\nexport type PublicKeyish = PublicKey | string;\r\n\r\nexport function validateAndParsePublicKey({\r\n  publicKey: orgPubKey,\r\n  transformSol,\r\n}: {\r\n  publicKey: PublicKeyish;\r\n  transformSol?: boolean;\r\n}): PublicKey {\r\n  const publicKey = tryParsePublicKey(orgPubKey.toString());\r\n\r\n  if (publicKey instanceof PublicKey) {\r\n    if (transformSol && publicKey.equals(SOLMint)) return WSOLMint;\r\n    return publicKey;\r\n  }\r\n\r\n  if (transformSol && publicKey.toString() === SOLMint.toBase58()) return WSOLMint;\r\n\r\n  if (typeof publicKey === \"string\") {\r\n    if (publicKey === PublicKey.default.toBase58()) return PublicKey.default;\r\n    try {\r\n      const key = new PublicKey(publicKey);\r\n      return key;\r\n    } catch {\r\n      throw new Error(\"invalid public key\");\r\n    }\r\n  }\r\n\r\n  throw new Error(\"invalid public key\");\r\n}\r\n\r\nexport function tryParsePublicKey(v: string): PublicKey | string {\r\n  try {\r\n    return new PublicKey(v);\r\n  } catch (e) {\r\n    return v;\r\n  }\r\n}\r\n\r\nexport const MEMO_PROGRAM_ID = new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\");\r\nexport const MEMO_PROGRAM_ID2 = new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\");\r\nexport const RENT_PROGRAM_ID = new PublicKey(\"SysvarRent111111111111111111111111111111111\");\r\nexport const CLOCK_PROGRAM_ID = new PublicKey(\"SysvarC1ock11111111111111111111111111111111\");\r\nexport const METADATA_PROGRAM_ID = new PublicKey(\"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\");\r\nexport const INSTRUCTION_PROGRAM_ID = new PublicKey(\"Sysvar1nstructions1111111111111111111111111\");\r\nexport const SYSTEM_PROGRAM_ID = SystemProgram.programId;\r\n\r\nexport const RAYMint = new PublicKey(\"4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R\");\r\nexport const PAIMint = new PublicKey(\"Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS\");\r\nexport const SRMMint = new PublicKey(\"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\");\r\nexport const USDCMint = new PublicKey(\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\");\r\nexport const USDTMint = new PublicKey(\"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\");\r\nexport const mSOLMint = new PublicKey(\"mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So\");\r\nexport const stSOLMint = new PublicKey(\"7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj\");\r\nexport const USDHMint = new PublicKey(\"USDH1SM1ojwWUga67PGrgFWUHibbjqMvuMaDkRJTgkX\");\r\nexport const NRVMint = new PublicKey(\"NRVwhjBQiUPYtfDT5zRBVJajzFQHaBUNtC7SNVvqRFa\");\r\nexport const ANAMint = new PublicKey(\"ANAxByE6G2WjFp7A4NqtWYXb3mgruyzZYg3spfxe6Lbo\");\r\nexport const ETHMint = new PublicKey(\"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\");\r\nexport const WSOLMint = new PublicKey(\"So11111111111111111111111111111111111111112\");\r\nexport const SOLMint = PublicKey.default;\r\n\r\nexport function solToWSol(mint: PublicKeyish): PublicKey {\r\n  return validateAndParsePublicKey({ publicKey: mint, transformSol: true });\r\n}\r\n"],"mappings":"4ZAAA,kgBAAA,MAA0E,2BAC1E,EAAiC,6BAQ1B,WAAqB,CAAE,SAAQ,WAAW,GAAO,aAAa,IAAuC,CAC1G,MAAO,CACL,SACA,aACA,UACF,CACF,CAEO,GAAM,GAA0B,CACrC,EAAY,CAAE,OAAQ,mBAAkB,WAAY,EAAM,CAAC,EAC3D,EAAY,CAAE,OAAQ,gBAAc,UAAW,WAAY,EAAM,CAAC,EAClE,EAAY,CAAE,OAAQ,qBAAoB,WAAY,EAAM,CAAC,CAC/D,EAIO,WAAmC,CACxC,UAAW,EACX,gBAIY,CACZ,GAAM,GAAY,EAAkB,EAAU,SAAS,CAAC,EAExD,GAAI,YAAqB,aACvB,MAAI,IAAgB,EAAU,OAAO,CAAO,EAAU,EAC/C,EAGT,GAAI,GAAgB,EAAU,SAAS,IAAM,EAAQ,SAAS,EAAG,MAAO,GAExE,GAAI,MAAO,IAAc,SAAU,CACjC,GAAI,IAAc,YAAU,QAAQ,SAAS,EAAG,MAAO,aAAU,QACjE,GAAI,CAEF,MADY,IAAI,aAAU,CAAS,CAErC,MAAE,CACA,KAAM,IAAI,OAAM,oBAAoB,CACtC,CACF,CAEA,KAAM,IAAI,OAAM,oBAAoB,CACtC,CAEO,WAA2B,EAA+B,CAC/D,GAAI,CACF,MAAO,IAAI,aAAU,CAAC,CACxB,MAAE,CACA,MAAO,EACT,CACF,CAEO,GAAM,GAAkB,GAAI,aAAU,6CAA6C,EAC7E,EAAmB,GAAI,aAAU,6CAA6C,EAC9E,EAAkB,GAAI,aAAU,6CAA6C,EAC7E,EAAmB,GAAI,aAAU,6CAA6C,EAC9E,EAAsB,GAAI,aAAU,6CAA6C,EACjF,EAAyB,GAAI,aAAU,6CAA6C,EACpF,EAAoB,gBAAc,UAElC,EAAU,GAAI,aAAU,8CAA8C,EACtE,EAAU,GAAI,aAAU,8CAA8C,EACtE,EAAU,GAAI,aAAU,6CAA6C,EACrE,EAAW,GAAI,aAAU,8CAA8C,EACvE,EAAW,GAAI,aAAU,8CAA8C,EACvE,EAAW,GAAI,aAAU,6CAA6C,EACtE,EAAY,GAAI,aAAU,8CAA8C,EACxE,EAAW,GAAI,aAAU,6CAA6C,EACtE,EAAU,GAAI,aAAU,6CAA6C,EACrE,EAAU,GAAI,aAAU,8CAA8C,EACtE,EAAU,GAAI,aAAU,8CAA8C,EACtE,EAAW,GAAI,aAAU,6CAA6C,EACtE,EAAU,YAAU,QAE1B,WAAmB,EAA+B,CACvD,MAAO,GAA0B,CAAE,UAAW,EAAM,aAAc,EAAK,CAAC,CAC1E","names":[]}