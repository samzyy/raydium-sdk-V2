{"version":3,"sources":["../../src/common/date.ts"],"sourcesContent":["export type TimeStamp = string | number | Date;\r\n\r\nexport const isNumber = (val): boolean => typeof val === \"number\";\r\nexport type DateParam = string | number | Date | undefined;\r\n\r\nexport const getDate = (value?: DateParam): Date => (value ? new Date(value) : new Date());\r\nexport const getTime = (value?: DateParam): number => getDate(value).getTime();\r\n\r\n/** A must be milliseconds */\r\nexport function isDateBefore(timestampA: TimeStamp, timestampB: TimeStamp, options?: { unit?: \"ms\" | \"s\" }): boolean {\r\n  const realTimestampB = isNumber(timestampB)\r\n    ? (timestampB as number) * (options?.unit === \"s\" ? 1000 : 1)\r\n    : timestampB;\r\n  return new Date(timestampA).getTime() <= realTimestampB;\r\n}\r\n\r\n/** A must be milliseconds */\r\nexport function isDateAfter(timestampA: TimeStamp, timestampB: TimeStamp, options?: { unit?: \"ms\" | \"s\" }): boolean {\r\n  const realTimestampB = isNumber(timestampB)\r\n    ? (timestampB as number) * (options?.unit === \"s\" ? 1000 : 1)\r\n    : timestampB;\r\n  return new Date(timestampA).getTime() > realTimestampB;\r\n}\r\n\r\nexport function offsetDateTime(\r\n  baseDate: DateParam,\r\n  offset: {\r\n    days?: number;\r\n    hours?: number;\r\n    minutes?: number;\r\n    seconds?: number;\r\n    milliseconds?: number;\r\n  },\r\n): Date {\r\n  const timestamp = getTime(baseDate);\r\n  const offsetedTimestamp =\r\n    timestamp +\r\n    (offset.days ? offset.days * 24 * 60 * 60 * 1000 : 0) +\r\n    (offset.hours ? offset.hours * 60 * 60 * 1000 : 0) +\r\n    (offset.minutes ? offset.minutes * 60 * 1000 : 0) +\r\n    (offset.seconds ? offset.seconds * 1000 : 0) +\r\n    (offset.milliseconds ? offset.milliseconds : 0);\r\n  return getDate(offsetedTimestamp);\r\n}\r\n"],"mappings":"4ZAAA,yIAEO,GAAM,GAAW,AAAC,GAAiB,MAAO,IAAQ,SAG5C,EAAU,AAAC,GAA6B,EAAQ,GAAI,MAAK,CAAK,EAAI,GAAI,MACtE,EAAU,AAAC,GAA8B,EAAQ,CAAK,EAAE,QAAQ,EAGtE,WAAsB,EAAuB,EAAuB,EAA0C,CACnH,GAAM,GAAiB,EAAS,CAAU,EACrC,EAAyB,mBAAS,QAAS,IAAM,IAAO,GACzD,EACJ,MAAO,IAAI,MAAK,CAAU,EAAE,QAAQ,GAAK,CAC3C,CAGO,WAAqB,EAAuB,EAAuB,EAA0C,CAClH,GAAM,GAAiB,EAAS,CAAU,EACrC,EAAyB,mBAAS,QAAS,IAAM,IAAO,GACzD,EACJ,MAAO,IAAI,MAAK,CAAU,EAAE,QAAQ,EAAI,CAC1C,CAEO,WACL,EACA,EAOM,CAEN,GAAM,GACJ,AAFgB,EAAQ,CAAQ,EAG/B,GAAO,KAAO,EAAO,KAAO,GAAK,GAAK,GAAK,IAAO,GAClD,GAAO,MAAQ,EAAO,MAAQ,GAAK,GAAK,IAAO,GAC/C,GAAO,QAAU,EAAO,QAAU,GAAK,IAAO,GAC9C,GAAO,QAAU,EAAO,QAAU,IAAO,GACzC,GAAO,aAAe,EAAO,aAAe,GAC/C,MAAO,GAAQ,CAAiB,CAClC","names":[]}