{"version":3,"sources":["../../../src/raydium/farm/type.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\r\nimport BN from \"bn.js\";\r\nimport { ApiV3PoolInfoStandardItem, ApiV3Token, FormatFarmInfoOut } from \"../../api/type\";\r\nimport { TxVersion } from \"../../common\";\r\nimport { BigNumberish } from \"../../common/bignumber\";\r\nimport { ComputeBudgetConfig, TxTipConfig } from \"../../raydium/type\";\r\nimport { poolTypeV6 } from \"./config\";\r\n\r\nexport type RewardType = keyof typeof poolTypeV6;\r\nexport interface APIRewardInfo {\r\n  rewardMint: string;\r\n  rewardVault: string;\r\n  rewardOpenTime: number;\r\n  rewardEndTime: number;\r\n  rewardPerSecond: string | number;\r\n  rewardSender?: string;\r\n  rewardType: string;\r\n}\r\n\r\nexport interface RewardInfoWithKey {\r\n  rewardMint: PublicKey;\r\n  rewardVault: PublicKey;\r\n  rewardOpenTime: number;\r\n  rewardEndTime: number;\r\n  rewardType: RewardType;\r\n  rewardPerSecond: string | number;\r\n  rewardSender?: PublicKey;\r\n}\r\nexport interface FarmRewardInfo {\r\n  mint: PublicKey;\r\n  perSecond: string;\r\n  openTime: number;\r\n  endTime: number;\r\n  rewardType: RewardType;\r\n}\r\n\r\nexport interface FarmRewardInfoConfig {\r\n  isSet: BN;\r\n  rewardPerSecond: BN;\r\n  rewardOpenTime: BN;\r\n  rewardEndTime: BN;\r\n  rewardType: BN;\r\n}\r\n\r\nexport interface RewardInfoKey {\r\n  rewardMint: PublicKey;\r\n  rewardVault: PublicKey;\r\n  userRewardToken: PublicKey;\r\n}\r\n\r\nexport interface FarmPoolInfoV6 {\r\n  version: number;\r\n  programId: PublicKey;\r\n\r\n  lpMint: PublicKey;\r\n\r\n  rewardInfos: FarmRewardInfo[];\r\n\r\n  lockInfo: {\r\n    lockMint: PublicKey;\r\n    lockVault: PublicKey;\r\n  };\r\n}\r\n\r\nexport interface CreateFarm<T = TxVersion.LEGACY> {\r\n  poolInfo: ApiV3PoolInfoStandardItem;\r\n  rewardInfos: FarmRewardInfo[];\r\n  payer?: PublicKey;\r\n  programId?: PublicKey;\r\n  txVersion?: T;\r\n  computeBudgetConfig?: ComputeBudgetConfig;\r\n  txTipConfig?: TxTipConfig;\r\n  feePayer?: PublicKey;\r\n}\r\n\r\nexport interface CreateFarmExtInfo {\r\n  farmId: PublicKey;\r\n  farmAuthority: PublicKey;\r\n  lpVault: PublicKey;\r\n  lockUserAccount: PublicKey;\r\n  nonce: number;\r\n}\r\n\r\nexport interface UpdateFarmReward<T = TxVersion.LEGACY> {\r\n  farmInfo: FormatFarmInfoOut;\r\n  newRewardInfo: FarmRewardInfo;\r\n  payer?: PublicKey;\r\n  txVersion?: T;\r\n  computeBudgetConfig?: ComputeBudgetConfig;\r\n  txTipConfig?: TxTipConfig;\r\n  feePayer?: PublicKey;\r\n}\r\n\r\nexport interface UpdateFarmRewards<T = TxVersion.LEGACY> {\r\n  farmInfo: FormatFarmInfoOut;\r\n  newRewardInfos: FarmRewardInfo[];\r\n  payer?: PublicKey;\r\n  txVersion?: T;\r\n  computeBudgetConfig?: ComputeBudgetConfig;\r\n  txTipConfig?: TxTipConfig;\r\n  feePayer?: PublicKey;\r\n}\r\n\r\nexport interface FarmDWParam<T = TxVersion.LEGACY> {\r\n  farmInfo: {\r\n    id: string;\r\n    programId: string;\r\n    lpMint: ApiV3Token;\r\n    rewardInfos: { mint: ApiV3Token }[];\r\n  };\r\n  amount: BigNumberish;\r\n  feePayer?: PublicKey;\r\n  useSOLBalance?: boolean;\r\n  associatedOnly?: boolean;\r\n  checkCreateATAOwner?: boolean;\r\n  deposited?: BN;\r\n  txVersion?: T;\r\n  userAuxiliaryLedgers?: string[];\r\n  computeBudgetConfig?: ComputeBudgetConfig;\r\n  txTipConfig?: TxTipConfig;\r\n}\r\n/* ================= pool keys ================= */\r\nexport type FarmPoolKeys = {\r\n  readonly id: PublicKey;\r\n  readonly lpMint: PublicKey;\r\n  readonly version: number;\r\n  readonly programId: PublicKey;\r\n  readonly authority: PublicKey;\r\n  readonly lpVault: PublicKey;\r\n  readonly upcoming: boolean;\r\n  readonly rewardInfos: (\r\n    | {\r\n      readonly rewardMint: PublicKey;\r\n      readonly rewardVault: PublicKey;\r\n    }\r\n    | {\r\n      readonly rewardMint: PublicKey;\r\n      readonly rewardVault: PublicKey;\r\n      readonly rewardOpenTime: number;\r\n      readonly rewardEndTime: number;\r\n      readonly rewardPerSecond: number;\r\n      readonly rewardType: RewardType;\r\n    }\r\n  )[];\r\n};\r\n"],"mappings":"kWAAA","names":[]}