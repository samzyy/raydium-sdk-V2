{"version":3,"sources":["../../../src/raydium/marketV2/instrument.ts","../../../src/common/txTool/txType.ts","../../../src/marshmallow/index.ts","../../../src/marshmallow/buffer-layout.ts","../../../src/raydium/marketV2/layout.ts"],"sourcesContent":["import {\r\n  Connection,\r\n  Keypair,\r\n  PublicKey,\r\n  SystemProgram,\r\n  SYSVAR_RENT_PUBKEY,\r\n  Transaction,\r\n  TransactionInstruction,\r\n} from \"@solana/web3.js\";\r\nimport BN from \"bn.js\";\r\nimport { createInitializeAccountInstruction, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\r\nimport { InstructionType } from \"@/common/txTool/txType\";\r\nimport { struct, u16, u32, u64, u8 } from \"../../marshmallow\";\r\nimport { MARKET_STATE_LAYOUT_V2 } from \"./layout\";\r\n\r\ntype Transactions = {\r\n  transaction: Transaction;\r\n  signer?: Keypair[] | undefined;\r\n  instructionTypes?: string[];\r\n}[];\r\n\r\nexport function initializeMarket({\r\n  programId,\r\n  marketInfo,\r\n}: {\r\n  programId: PublicKey;\r\n  marketInfo: {\r\n    id: PublicKey;\r\n    requestQueue: PublicKey;\r\n    eventQueue: PublicKey;\r\n    bids: PublicKey;\r\n    asks: PublicKey;\r\n    baseVault: PublicKey;\r\n    quoteVault: PublicKey;\r\n    baseMint: PublicKey;\r\n    quoteMint: PublicKey;\r\n    authority?: PublicKey;\r\n    pruneAuthority?: PublicKey;\r\n\r\n    baseLotSize: BN;\r\n    quoteLotSize: BN;\r\n    feeRateBps: number;\r\n    vaultSignerNonce: BN;\r\n    quoteDustThreshold: BN;\r\n  };\r\n}): TransactionInstruction {\r\n  const dataLayout = struct([\r\n    u8(\"version\"),\r\n    u32(\"instruction\"),\r\n    u64(\"baseLotSize\"),\r\n    u64(\"quoteLotSize\"),\r\n    u16(\"feeRateBps\"),\r\n    u64(\"vaultSignerNonce\"),\r\n    u64(\"quoteDustThreshold\"),\r\n  ]);\r\n\r\n  const keys = [\r\n    { pubkey: marketInfo.id, isSigner: false, isWritable: true },\r\n    { pubkey: marketInfo.requestQueue, isSigner: false, isWritable: true },\r\n    { pubkey: marketInfo.eventQueue, isSigner: false, isWritable: true },\r\n    { pubkey: marketInfo.bids, isSigner: false, isWritable: true },\r\n    { pubkey: marketInfo.asks, isSigner: false, isWritable: true },\r\n    { pubkey: marketInfo.baseVault, isSigner: false, isWritable: true },\r\n    { pubkey: marketInfo.quoteVault, isSigner: false, isWritable: true },\r\n    { pubkey: marketInfo.baseMint, isSigner: false, isWritable: false },\r\n    { pubkey: marketInfo.quoteMint, isSigner: false, isWritable: false },\r\n    // Use a dummy address if using the new dex upgrade to save tx space.\r\n    {\r\n      pubkey: marketInfo.authority ? marketInfo.quoteMint : SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ]\r\n    .concat(marketInfo.authority ? { pubkey: marketInfo.authority, isSigner: false, isWritable: false } : [])\r\n    .concat(\r\n      marketInfo.authority && marketInfo.pruneAuthority\r\n        ? { pubkey: marketInfo.pruneAuthority, isSigner: false, isWritable: false }\r\n        : [],\r\n    );\r\n\r\n  const data = Buffer.alloc(dataLayout.span);\r\n  dataLayout.encode(\r\n    {\r\n      version: 0,\r\n      instruction: 0,\r\n      baseLotSize: marketInfo.baseLotSize,\r\n      quoteLotSize: marketInfo.quoteLotSize,\r\n      feeRateBps: marketInfo.feeRateBps,\r\n      vaultSignerNonce: marketInfo.vaultSignerNonce,\r\n      quoteDustThreshold: marketInfo.quoteDustThreshold,\r\n    },\r\n    data,\r\n  );\r\n\r\n  return new TransactionInstruction({\r\n    keys,\r\n    programId,\r\n    data,\r\n  });\r\n}\r\n\r\nexport async function makeCreateMarketInstruction({\r\n  connection,\r\n  wallet,\r\n  marketInfo,\r\n}: {\r\n  connection: Connection;\r\n  wallet: PublicKey;\r\n  marketInfo: {\r\n    programId: PublicKey;\r\n    id: { publicKey: PublicKey; seed: string };\r\n    baseMint: PublicKey;\r\n    quoteMint: PublicKey;\r\n    baseVault: { publicKey: PublicKey; seed: string };\r\n    quoteVault: { publicKey: PublicKey; seed: string };\r\n    vaultOwner: PublicKey;\r\n\r\n    requestQueue: { publicKey: PublicKey; seed: string };\r\n    eventQueue: { publicKey: PublicKey; seed: string };\r\n    bids: { publicKey: PublicKey; seed: string };\r\n    asks: { publicKey: PublicKey; seed: string };\r\n\r\n    feeRateBps: number;\r\n    vaultSignerNonce: BN;\r\n    quoteDustThreshold: BN;\r\n\r\n    baseLotSize: BN;\r\n    quoteLotSize: BN;\r\n\r\n    requestQueueSpace?: number;\r\n    eventQueueSpace?: number;\r\n    orderbookQueueSpace?: number;\r\n\r\n    lowestFeeMarket?: boolean;\r\n  };\r\n}): Promise<Transactions> {\r\n  const tx1 = new Transaction();\r\n  const accountLamports = await connection.getMinimumBalanceForRentExemption(165);\r\n  tx1.add(\r\n    SystemProgram.createAccountWithSeed({\r\n      fromPubkey: wallet,\r\n      basePubkey: wallet,\r\n      seed: marketInfo.baseVault.seed,\r\n      newAccountPubkey: marketInfo.baseVault.publicKey,\r\n      lamports: accountLamports,\r\n      space: 165,\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    SystemProgram.createAccountWithSeed({\r\n      fromPubkey: wallet,\r\n      basePubkey: wallet,\r\n      seed: marketInfo.quoteVault.seed,\r\n      newAccountPubkey: marketInfo.quoteVault.publicKey,\r\n      lamports: accountLamports,\r\n      space: 165,\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    createInitializeAccountInstruction(marketInfo.baseVault.publicKey, marketInfo.baseMint, marketInfo.vaultOwner),\r\n    createInitializeAccountInstruction(marketInfo.quoteVault.publicKey, marketInfo.quoteMint, marketInfo.vaultOwner),\r\n    SystemProgram.createAccountWithSeed({\r\n      fromPubkey: wallet,\r\n      basePubkey: wallet,\r\n      seed: marketInfo.id.seed,\r\n      newAccountPubkey: marketInfo.id.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(MARKET_STATE_LAYOUT_V2.span),\r\n      space: MARKET_STATE_LAYOUT_V2.span,\r\n      programId: marketInfo.programId,\r\n    }),\r\n  );\r\n\r\n  const tx2 = new Transaction();\r\n  tx2.add(\r\n    SystemProgram.createAccountWithSeed({\r\n      fromPubkey: wallet,\r\n      basePubkey: wallet,\r\n      seed: marketInfo.requestQueue.seed,\r\n      newAccountPubkey: marketInfo.requestQueue.publicKey,\r\n      lamports: marketInfo.lowestFeeMarket\r\n        ? 6208320\r\n        : await connection.getMinimumBalanceForRentExemption(marketInfo.requestQueueSpace ?? 5120 + 12),\r\n      space: marketInfo.lowestFeeMarket ? 764 : marketInfo.requestQueueSpace ?? 5120 + 12,\r\n      programId: marketInfo.programId,\r\n    }),\r\n    SystemProgram.createAccountWithSeed({\r\n      fromPubkey: wallet,\r\n      basePubkey: wallet,\r\n      seed: marketInfo.eventQueue.seed,\r\n      newAccountPubkey: marketInfo.eventQueue.publicKey,\r\n      lamports: marketInfo.lowestFeeMarket\r\n        ? 79594560\r\n        : await connection.getMinimumBalanceForRentExemption(marketInfo.eventQueueSpace ?? 262144 + 12),\r\n      space: marketInfo.lowestFeeMarket ? 11308 : marketInfo.eventQueueSpace ?? 262144 + 12,\r\n      programId: marketInfo.programId,\r\n    }),\r\n    SystemProgram.createAccountWithSeed({\r\n      fromPubkey: wallet,\r\n      basePubkey: wallet,\r\n      seed: marketInfo.bids.seed,\r\n      newAccountPubkey: marketInfo.bids.publicKey,\r\n      lamports: marketInfo.lowestFeeMarket\r\n        ? 101977920\r\n        : await connection.getMinimumBalanceForRentExemption(marketInfo.orderbookQueueSpace ?? 65536 + 12),\r\n      space: marketInfo.lowestFeeMarket ? 14524 : marketInfo.orderbookQueueSpace ?? 65536 + 12,\r\n      programId: marketInfo.programId,\r\n    }),\r\n    SystemProgram.createAccountWithSeed({\r\n      fromPubkey: wallet,\r\n      basePubkey: wallet,\r\n      seed: marketInfo.asks.seed,\r\n      newAccountPubkey: marketInfo.asks.publicKey,\r\n      lamports: marketInfo.lowestFeeMarket\r\n        ? 101977920\r\n        : await connection.getMinimumBalanceForRentExemption(marketInfo.orderbookQueueSpace ?? 65536 + 12),\r\n      space: marketInfo.lowestFeeMarket ? 14524 : marketInfo.orderbookQueueSpace ?? 65536 + 12,\r\n      programId: marketInfo.programId,\r\n    }),\r\n    initializeMarket({\r\n      programId: marketInfo.programId,\r\n      marketInfo: {\r\n        id: marketInfo.id.publicKey,\r\n        requestQueue: marketInfo.requestQueue.publicKey,\r\n        eventQueue: marketInfo.eventQueue.publicKey,\r\n        bids: marketInfo.bids.publicKey,\r\n        asks: marketInfo.asks.publicKey,\r\n        baseVault: marketInfo.baseVault.publicKey,\r\n        quoteVault: marketInfo.quoteVault.publicKey,\r\n        baseMint: marketInfo.baseMint,\r\n        quoteMint: marketInfo.quoteMint,\r\n\r\n        baseLotSize: marketInfo.baseLotSize,\r\n        quoteLotSize: marketInfo.quoteLotSize,\r\n        feeRateBps: marketInfo.feeRateBps,\r\n        vaultSignerNonce: marketInfo.vaultSignerNonce,\r\n        quoteDustThreshold: marketInfo.quoteDustThreshold,\r\n      },\r\n    }),\r\n  );\r\n\r\n  return [\r\n    {\r\n      transaction: tx1,\r\n      signer: [],\r\n      instructionTypes: [\r\n        InstructionType.CreateAccount,\r\n        InstructionType.CreateAccount,\r\n        InstructionType.InitAccount,\r\n        InstructionType.InitAccount,\r\n      ],\r\n    },\r\n    {\r\n      transaction: tx2,\r\n      signer: [],\r\n      instructionTypes: [\r\n        InstructionType.CreateAccount,\r\n        InstructionType.CreateAccount,\r\n        InstructionType.CreateAccount,\r\n        InstructionType.CreateAccount,\r\n        InstructionType.CreateAccount,\r\n        InstructionType.InitMarket,\r\n      ],\r\n    },\r\n  ];\r\n}\r\n","export enum TxVersion {\r\n  \"V0\",\r\n  \"LEGACY\",\r\n}\r\n\r\nexport const InstructionType = {\r\n  CreateAccount: \"CreateAccount\",\r\n  InitAccount: \"InitAccount\",\r\n  CreateATA: \"CreateATA\",\r\n  CloseAccount: \"CloseAccount\",\r\n  TransferAmount: \"TransferAmount\",\r\n  InitMint: \"InitMint\",\r\n  MintTo: \"MintTo\",\r\n\r\n  InitMarket: \"InitMarket\", // create market main ins\r\n  Util1216OwnerClaim: \"Util1216OwnerClaim\", // owner claim token ins\r\n\r\n  SetComputeUnitPrice: \"SetComputeUnitPrice\",\r\n  SetComputeUnitLimit: \"SetComputeUnitLimit\",\r\n\r\n  // CLMM\r\n  ClmmCreatePool: \"ClmmCreatePool\",\r\n  ClmmOpenPosition: \"ClmmOpenPosition\",\r\n  ClmmIncreasePosition: \"ClmmIncreasePosition\",\r\n  ClmmDecreasePosition: \"ClmmDecreasePosition\",\r\n  ClmmClosePosition: \"ClmmClosePosition\",\r\n  ClmmSwapBaseIn: \"ClmmSwapBaseIn\",\r\n  ClmmSwapBaseOut: \"ClmmSwapBaseOut\",\r\n  ClmmInitReward: \"ClmmInitReward\",\r\n  ClmmSetReward: \"ClmmSetReward\",\r\n  ClmmCollectReward: \"ClmmCollectReward\",\r\n  ClmmLockPosition: \"ClmmLockPosition\",\r\n  ClmmHarvestLockPosition: \"ClmmHarvestLockPosition\",\r\n\r\n  AmmV4Swap: \"AmmV4Swap\",\r\n  AmmV4AddLiquidity: \"AmmV4AddLiquidity\",\r\n  AmmV4RemoveLiquidity: \"AmmV4RemoveLiquidity\",\r\n  AmmV4SimulatePoolInfo: \"AmmV4SimulatePoolInfo\",\r\n  AmmV4SwapBaseIn: \"AmmV4SwapBaseIn\",\r\n  AmmV4SwapBaseOut: \"AmmV4SwapBaseOut\",\r\n  AmmV4CreatePool: \"AmmV4CreatePool\",\r\n  AmmV4InitPool: \"AmmV4InitPool\",\r\n\r\n  AmmV5AddLiquidity: \"AmmV5AddLiquidity\",\r\n  AmmV5RemoveLiquidity: \"AmmV5RemoveLiquidity\",\r\n  AmmV5SimulatePoolInfo: \"AmmV5SimulatePoolInfo\",\r\n  AmmV5SwapBaseIn: \"AmmV5SwapBaseIn\",\r\n  AmmV5SwapBaseOut: \"AmmV5SwapBaseOut\",\r\n\r\n  RouteSwap: \"RouteSwap\",\r\n  RouteSwap1: \"RouteSwap1\",\r\n  RouteSwap2: \"RouteSwap2\",\r\n\r\n  FarmV3Deposit: \"FarmV3Deposit\",\r\n  FarmV3Withdraw: \"FarmV3Withdraw\",\r\n  FarmV3CreateLedger: \"FarmV3CreateLedger\",\r\n\r\n  FarmV4Withdraw: \"FarmV4Withdraw\",\r\n\r\n  FarmV5Deposit: \"FarmV5Deposit\",\r\n  FarmV5Withdraw: \"FarmV5Withdraw\",\r\n  FarmV5CreateLedger: \"FarmV5CreateLedger\",\r\n\r\n  FarmV6Deposit: \"FarmV6Deposit\",\r\n  FarmV6Withdraw: \"FarmV6Withdraw\",\r\n  FarmV6Create: \"FarmV6Create\",\r\n  FarmV6Restart: \"FarmV6Restart\",\r\n  FarmV6CreatorAddReward: \"FarmV6CreatorAddReward\",\r\n  FarmV6CreatorWithdraw: \"FarmV6CreatorWithdraw\",\r\n\r\n  CpmmCreatePool: \"CpmmCreatePool\",\r\n  CpmmAddLiquidity: \"CpmmAddLiquidity\",\r\n  CpmmWithdrawLiquidity: \"CpmmWithdrawLiquidity\",\r\n  CpmmSwapBaseIn: \"CpmmSwapBaseIn\",\r\n  CpmmSwapBaseOut: \"CpmmSwapBaseOut\",\r\n\r\n  CpmmLockLp: \"CpmmLockLp\",\r\n  CpmmCollectLockFee: \"CpmmCollectLockFee\",\r\n  TransferTip: \"TransferTip\",\r\n};\r\n","import { PublicKey } from \"@solana/web3.js\";\r\nimport BN, { isBN } from \"bn.js\";\r\n\r\nimport {\r\n  bits,\r\n  blob,\r\n  Blob,\r\n  Layout,\r\n  offset as _offset,\r\n  seq as _seq,\r\n  Structure as _Structure,\r\n  u32 as _u32,\r\n  u8 as _u8,\r\n  UInt,\r\n  union as _union,\r\n  Union as _Union,\r\n} from \"./buffer-layout\";\r\n\r\nexport * from \"./buffer-layout\";\r\nexport { blob };\r\n\r\nexport class BNLayout<P extends string = \"\"> extends Layout<BN, P> {\r\n  blob: Layout<Buffer>;\r\n  signed: boolean;\r\n\r\n  constructor(span: number, signed: boolean, property?: P) {\r\n    //@ts-expect-error type wrong for super()'s type different from extends, but it desn't matter\r\n    super(span, property);\r\n    this.blob = blob(span);\r\n    this.signed = signed;\r\n  }\r\n\r\n  /** @override */\r\n  decode(b: Buffer, offset = 0): BN {\r\n    const num = new BN(this.blob.decode(b, offset), 10, \"le\");\r\n    if (this.signed) {\r\n      return num.fromTwos(this.span * 8).clone();\r\n    }\r\n    return num;\r\n  }\r\n\r\n  /** @override */\r\n  encode(src: BN, b: Buffer, offset = 0): number {\r\n    if (typeof src === \"number\") src = new BN(src); // src will pass a number accidently in union\r\n    if (this.signed) {\r\n      src = src.toTwos(this.span * 8);\r\n    }\r\n    return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\r\n  }\r\n}\r\n\r\nexport class WideBits<P extends string = \"\"> extends Layout<Record<string, boolean>, P> {\r\n  _lower: any;\r\n  _upper: any;\r\n  // TODO: unknown\r\n  constructor(property?: P) {\r\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\r\n    super(8, property);\r\n    this._lower = bits(_u32(), false);\r\n    this._upper = bits(_u32(), false);\r\n  }\r\n\r\n  addBoolean(property: string): void {\r\n    if (this._lower.fields.length < 32) {\r\n      this._lower.addBoolean(property);\r\n    } else {\r\n      this._upper.addBoolean(property);\r\n    }\r\n  }\r\n\r\n  decode(b: Buffer, offset = 0): Record<string, boolean> {\r\n    const lowerDecoded = this._lower.decode(b, offset);\r\n    const upperDecoded = this._upper.decode(b, offset + this._lower.span);\r\n    return { ...lowerDecoded, ...upperDecoded };\r\n  }\r\n\r\n  encode(src: any /* TEMP */, b: Buffer, offset = 0): any {\r\n    return this._lower.encode(src, b, offset) + this._upper.encode(src, b, offset + this._lower.span);\r\n  }\r\n}\r\n\r\nexport function u8<P extends string = \"\">(property?: P): UInt<number, P> {\r\n  return new UInt(1, property);\r\n}\r\n\r\nexport function u32<P extends string = \"\">(property?: P): UInt<number, P> {\r\n  return new UInt(4, property);\r\n}\r\n\r\nexport function u64<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(8, false, property);\r\n}\r\n\r\nexport function u128<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(16, false, property);\r\n}\r\n\r\nexport function i8<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(1, true, property);\r\n}\r\n\r\nexport function i64<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(8, true, property);\r\n}\r\n\r\nexport function i128<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(16, true, property);\r\n}\r\n\r\nexport class WrappedLayout<T, U, P extends string = \"\"> extends Layout<U, P> {\r\n  layout: Layout<T>;\r\n  decoder: (data: T) => U;\r\n  encoder: (src: U) => T;\r\n\r\n  constructor(layout: Layout<T>, decoder: (data: T) => U, encoder: (src: U) => T, property?: P) {\r\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\r\n    super(layout.span, property);\r\n    this.layout = layout;\r\n    this.decoder = decoder;\r\n    this.encoder = encoder;\r\n  }\r\n\r\n  decode(b: Buffer, offset?: number): U {\r\n    return this.decoder(this.layout.decode(b, offset));\r\n  }\r\n\r\n  encode(src: U, b: Buffer, offset?: number): number {\r\n    return this.layout.encode(this.encoder(src), b, offset);\r\n  }\r\n\r\n  getSpan(b: Buffer, offset?: number): number {\r\n    return this.layout.getSpan(b, offset);\r\n  }\r\n}\r\n\r\nexport function publicKey<P extends string = \"\">(property?: P): Layout<PublicKey, P> {\r\n  return new WrappedLayout(\r\n    blob(32),\r\n    (b: Buffer) => new PublicKey(b),\r\n    (key: PublicKey) => key.toBuffer(),\r\n    property,\r\n  );\r\n}\r\n\r\nexport class OptionLayout<T, P> extends Layout<T | null, P> {\r\n  layout: Layout<T>;\r\n  discriminator: Layout<number>;\r\n\r\n  constructor(layout: Layout<T>, property?: P) {\r\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\r\n    super(-1, property);\r\n    this.layout = layout;\r\n    this.discriminator = _u8();\r\n  }\r\n\r\n  encode(src: T | null, b: Buffer, offset = 0): number {\r\n    if (src === null || src === undefined) {\r\n      return this.discriminator.encode(0, b, offset);\r\n    }\r\n    this.discriminator.encode(1, b, offset);\r\n    return this.layout.encode(src, b, offset + 1) + 1;\r\n  }\r\n\r\n  decode(b: Buffer, offset = 0): T | null {\r\n    const discriminator = this.discriminator.decode(b, offset);\r\n    if (discriminator === 0) {\r\n      return null;\r\n    } else if (discriminator === 1) {\r\n      return this.layout.decode(b, offset + 1);\r\n    }\r\n    throw new Error(\"Invalid option \" + this.property);\r\n  }\r\n\r\n  getSpan(b: Buffer, offset = 0): number {\r\n    const discriminator = this.discriminator.decode(b, offset);\r\n    if (discriminator === 0) {\r\n      return 1;\r\n    } else if (discriminator === 1) {\r\n      return this.layout.getSpan(b, offset + 1) + 1;\r\n    }\r\n    throw new Error(\"Invalid option \" + this.property);\r\n  }\r\n}\r\n\r\nexport function option<T, P extends string = \"\">(layout: Layout<T>, property?: P): Layout<T | null, P> {\r\n  return new OptionLayout<T, P>(layout, property);\r\n}\r\n\r\nexport function bool<P extends string = \"\">(property?: P): Layout<boolean, P> {\r\n  return new WrappedLayout(_u8(), decodeBool, encodeBool, property);\r\n}\r\n\r\nexport function decodeBool(value: number): boolean {\r\n  if (value === 0) {\r\n    return false;\r\n  } else if (value === 1) {\r\n    return true;\r\n  }\r\n  throw new Error(\"Invalid bool: \" + value);\r\n}\r\n\r\nexport function encodeBool(value: boolean): number {\r\n  return value ? 1 : 0;\r\n}\r\n\r\nexport function vec<T, P extends string = \"\">(elementLayout: Layout<T>, property?: P): Layout<T[], P> {\r\n  const length = _u32(\"length\");\r\n  const layout: Layout<{ values: T[] }> = struct([\r\n    length,\r\n    seq(elementLayout, _offset(length, -length.span), \"values\"),\r\n  ]) as any; // Something I don't know\r\n  return new WrappedLayout(\r\n    layout,\r\n    ({ values }) => values,\r\n    (values) => ({ values }),\r\n    property,\r\n  );\r\n}\r\n\r\nexport function tagged<T, P extends string = \"\">(tag: BN, layout: Layout<T>, property?: P): Layout<T, P> {\r\n  const wrappedLayout: Layout<{ tag: BN; data: T }> = struct([u64(\"tag\"), layout.replicate(\"data\")]) as any; // Something I don't know\r\n\r\n  function decodeTag({ tag: receivedTag, data }: { tag: BN; data: T }): T {\r\n    if (!receivedTag.eq(tag)) {\r\n      throw new Error(\"Invalid tag, expected: \" + tag.toString(\"hex\") + \", got: \" + receivedTag.toString(\"hex\"));\r\n    }\r\n    return data;\r\n  }\r\n\r\n  return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\r\n}\r\n\r\nexport function vecU8<P extends string = \"\">(property?: P): Layout<Buffer, P> {\r\n  const length = _u32(\"length\");\r\n  const layout: Layout<{ data: Buffer }> = struct([length, blob(_offset(length, -length.span), \"data\")]) as any; // Something I don't know\r\n  return new WrappedLayout(\r\n    layout,\r\n    ({ data }) => data,\r\n    (data) => ({ data }),\r\n    property,\r\n  );\r\n}\r\n\r\nexport function str<P extends string = \"\">(property?: P): Layout<string, P> {\r\n  return new WrappedLayout(\r\n    vecU8(),\r\n    (data) => data.toString(\"utf-8\"),\r\n    (s) => Buffer.from(s, \"utf-8\"),\r\n    property,\r\n  );\r\n}\r\n\r\nexport interface EnumLayout<T, P extends string = \"\"> extends Layout<T, P> {\r\n  registry: Record<string, Layout<any>>;\r\n}\r\n\r\nexport function rustEnum<T, P extends string = \"\">(variants: Layout<any>[], property?: P): EnumLayout<T, P> {\r\n  const unionLayout = _union(_u8(), property);\r\n  variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\r\n  return unionLayout as any; // ?why use UnionLayout? This must be a fault\r\n}\r\n\r\nexport function array<T, P extends string = \"\">(\r\n  elementLayout: Layout<T>,\r\n  length: number,\r\n  property?: P,\r\n): Layout<T[], P> {\r\n  const layout = struct([seq(elementLayout, length, \"values\")]) as any as Layout<{ values: T[] }>; // Something I don't know\r\n  return new WrappedLayout(\r\n    layout,\r\n    ({ values }) => values,\r\n    (values) => ({ values }),\r\n    property,\r\n  );\r\n}\r\n\r\nexport class Structure<T, P, D extends { [key: string]: any; }> extends _Structure<T, P, D> {\r\n  /** @override */\r\n  decode(b: Buffer, offset?: number): D {\r\n    return super.decode(b, offset);\r\n  }\r\n}\r\n\r\nexport function struct<T, P extends string = \"\">(\r\n  fields: T,\r\n  property?: P,\r\n  decodePrefixes?: boolean,\r\n): T extends Layout<infer Value, infer Property>[]\r\n  ? Structure<\r\n    Value,\r\n    P,\r\n    {\r\n      [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\r\n      ? V\r\n      : any;\r\n    }\r\n  >\r\n  : any {\r\n  //@ts-expect-error this type is not quite satisfied the define, but, never no need to worry about.\r\n  return new Structure(fields, property, decodePrefixes);\r\n}\r\n\r\nexport type GetLayoutSchemaFromStructure<T extends Structure<any, any, any>> = T extends Structure<any, any, infer S>\r\n  ? S\r\n  : any;\r\nexport type GetStructureFromLayoutSchema<S extends { [key: string]: any; }> = Structure<any, any, S>;\r\n\r\nexport class Union<Schema extends { [key: string]: any; }> extends _Union<Schema> {\r\n  encodeInstruction(instruction: any): Buffer {\r\n    const instructionMaxSpan = Math.max(...Object.values(this.registry).map((r) => r.span));\r\n    const b = Buffer.alloc(instructionMaxSpan);\r\n    return b.slice(0, this.encode(instruction, b));\r\n  }\r\n\r\n  decodeInstruction(instruction: any): Partial<Schema> {\r\n    return this.decode(instruction);\r\n  }\r\n}\r\nexport function union<UnionSchema extends { [key: string]: any } = any>(\r\n  discr: any,\r\n  defaultLayout?: any,\r\n  property?: string,\r\n): Union<UnionSchema> {\r\n  return new Union(discr, defaultLayout, property);\r\n}\r\n\r\nclass Zeros extends Blob {\r\n  decode(b: Buffer, offset: number): Buffer {\r\n    const slice = super.decode(b, offset);\r\n    if (!slice.every((v) => v === 0)) {\r\n      throw new Error(\"nonzero padding bytes\");\r\n    }\r\n    return slice;\r\n  }\r\n}\r\n\r\nexport function zeros(length: number): Zeros {\r\n  return new Zeros(length);\r\n}\r\n\r\nexport function seq<T, P extends string = \"\", AnotherP extends string = \"\">(\r\n  elementLayout: Layout<T, P>,\r\n  count: number | BN | Layout<BN | number, P>,\r\n  property?: AnotherP,\r\n): Layout<T[], AnotherP> {\r\n  let parsedCount: number;\r\n  const superCount =\r\n    typeof count === \"number\"\r\n      ? count\r\n      : isBN(count)\r\n        ? count.toNumber()\r\n        : new Proxy(count as unknown as Layout<number> /* pretend to be Layout<number> */, {\r\n          get(target, property): any {\r\n            if (!parsedCount) {\r\n              // get count in targetLayout. note that count may be BN\r\n              const countProperty = Reflect.get(target, \"count\");\r\n\r\n              // let targetLayout's  property:count be a number\r\n              parsedCount = isBN(countProperty) ? countProperty.toNumber() : countProperty;\r\n\r\n              // record the count\r\n              Reflect.set(target, \"count\", parsedCount);\r\n            }\r\n            return Reflect.get(target, property);\r\n          },\r\n          set(target, property, value): any {\r\n            if (property === \"count\") {\r\n              parsedCount = value;\r\n            }\r\n            return Reflect.set(target, property, value);\r\n          },\r\n        });\r\n\r\n  // @ts-expect-error force type\r\n  return _seq(elementLayout, superCount, property);\r\n}\r\n","import {\r\n  bits as _bits,\r\n  BitStructure as _BitStructure,\r\n  blob as _blob,\r\n  Blob as _Blob,\r\n  cstr as _cstr,\r\n  f32 as _f32,\r\n  f32be as _f32be,\r\n  f64 as _f64,\r\n  f64be as _f64be,\r\n  greedy as _greedy,\r\n  Layout as _Layout,\r\n  ns64 as _ns64,\r\n  ns64be as _ns64be,\r\n  nu64 as _nu64,\r\n  nu64be as _nu64be,\r\n  offset as _offset,\r\n  s16 as _s16,\r\n  s16be as _s16be,\r\n  s24 as _s24,\r\n  s24be as _s24be,\r\n  s32 as _s32,\r\n  s32be as _s32be,\r\n  s40 as _s40,\r\n  s40be as _s40be,\r\n  s48 as _s48,\r\n  s48be as _s48be,\r\n  s8 as _s8,\r\n  seq as _seq,\r\n  struct as _struct,\r\n  Structure as _Structure,\r\n  u16 as _u16,\r\n  u16be as _u16be,\r\n  u24 as _u24,\r\n  u24be as _u24be,\r\n  u32 as _u32,\r\n  u32be as _u32be,\r\n  u40 as _u40,\r\n  u40be as _u40be,\r\n  u48 as _u48,\r\n  u48be as _u48be,\r\n  u8 as _u8,\r\n  UInt as _UInt,\r\n  union as _union,\r\n  Union as _Union,\r\n  unionLayoutDiscriminator as _unionLayoutDiscriminator,\r\n  utf8 as _utf8,\r\n} from \"@solana/buffer-layout\";\r\n\r\n//#region ------------------- Layout -------------------\r\nexport interface Layout<T = any, P = \"\"> {\r\n  span: number;\r\n  property?: P;\r\n  decode(b: Buffer, offset?: number): T;\r\n  encode(src: T, b: Buffer, offset?: number): number;\r\n  getSpan(b: Buffer, offset?: number): number;\r\n  replicate<AP extends string>(name: AP): Layout<T, AP>;\r\n}\r\nexport interface LayoutConstructor {\r\n  new <T, P>(): Layout<T, P>; // for class extends syntex\r\n  new <T, P>(span?: T, property?: P): Layout<T, P>;\r\n  readonly prototype: Layout;\r\n}\r\nexport const Layout = _Layout as unknown as LayoutConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- Structure -------------------\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport interface Structure<T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>\r\n  extends Layout<DecodeSchema, P> {\r\n  span: number;\r\n  decode(b: Buffer, offset?: number): DecodeSchema;\r\n  layoutFor<AP extends string>(property: AP): Layout<DecodeSchema[AP]>;\r\n  offsetOf<AP extends string>(property: AP): number;\r\n}\r\ninterface StructureConstructor {\r\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(): Structure<T, P, DecodeSchema>;\r\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(\r\n    fields: T,\r\n    property?: P,\r\n    decodePrefixes?: boolean,\r\n  ): Structure<T, P, DecodeSchema>;\r\n}\r\nexport const Structure = _Structure as unknown as StructureConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- Union -------------------\r\nexport interface Union<UnionSchema extends { [key: string]: any } = any> extends Layout {\r\n  registry: object;\r\n  decode(b: Buffer, offset?: number): Partial<UnionSchema>;\r\n  addVariant(\r\n    variant: number,\r\n    layout: Structure<any, any, Partial<UnionSchema>> | Layout<any, keyof UnionSchema>,\r\n    property?: string,\r\n  ): any /* TEMP: code in Layout.js 1809 */;\r\n}\r\ninterface UnionConstructor {\r\n  new <UnionSchema extends { [key: string]: any } = any>(): Union<UnionSchema>;\r\n  new <UnionSchema extends { [key: string]: any } = any>(\r\n    discr: Layout<any, any>,\r\n    defaultLayout: Layout<any, any>,\r\n    property?: string,\r\n  ): Union<UnionSchema>;\r\n}\r\nexport const Union = _Union as unknown as UnionConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- BitStructure -------------------\r\nexport type BitStructure<T = unknown /* TEMP */, P = \"\"> = Layout<T, P>;\r\ninterface BitStructureConstructor {\r\n  new (...params: any[]): BitStructure;\r\n}\r\nexport const BitStructure = _BitStructure as BitStructureConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- UInt -------------------\r\nexport type UInt<T = any, P = \"\"> = Layout<T, P>;\r\ninterface UIntConstructor {\r\n  new <T, P>(span?: T, property?: P): UInt<T, P>;\r\n}\r\nexport const UInt = _UInt as UIntConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- Blob -------------------\r\nexport type Blob<P extends string = \"\"> = Layout<Buffer, P>;\r\ninterface BlobConstructor {\r\n  new (...params: ConstructorParameters<LayoutConstructor>): Blob;\r\n}\r\nexport const Blob = _Blob as unknown as BlobConstructor;\r\n//#endregion\r\n\r\nexport const greedy = _greedy as <P extends string = \"\">(elementSpan?: number, property?: P) => Layout<number, P>;\r\nexport const u8 = _u8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u16 = _u16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u24 = _u24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u32 = _u32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u40 = _u40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u48 = _u48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const nu64 = _nu64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u16be = _u16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u24be = _u24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u32be = _u32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u40be = _u40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u48be = _u48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const nu64be = _nu64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s8 = _s8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s16 = _s16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s24 = _s24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s32 = _s32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s40 = _s40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s48 = _s48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const ns64 = _ns64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s16be = _s16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s24be = _s24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s32be = _s32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s40be = _s40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s48be = _s48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const ns64be = _ns64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const f32 = _f32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const f32be = _f32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const f64 = _f64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const f64be = _f64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\n\r\nexport const struct = _struct as <T, P extends string = \"\">(\r\n  fields: T,\r\n  property?: P,\r\n  decodePrefixes?: boolean,\r\n) => T extends Layout<infer Value, infer Property>[]\r\n  ? Structure<\r\n      Value,\r\n      P,\r\n      {\r\n        [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\r\n          ? V\r\n          : any;\r\n      }\r\n    >\r\n  : any;\r\n\r\nexport const seq = _seq as unknown as <T, P>(\r\n  elementLayout: Layout<T, string>,\r\n  count: number | Layout<number, string>,\r\n  property?: P,\r\n) => Layout<T[]>;\r\nexport const union = _union as <UnionSchema extends { [key: string]: any } = any>(\r\n  discr: Layout<any, any>,\r\n  defaultLayout?: any,\r\n  property?: string,\r\n) => Union<UnionSchema>;\r\nexport const unionLayoutDiscriminator = _unionLayoutDiscriminator as <P extends string = \"\">(\r\n  layout: Layout<any, P>,\r\n  property?: P,\r\n) => any;\r\nexport const blob = _blob as unknown as <P extends string = \"\">(\r\n  length: number | Layout<number, P>,\r\n  property?: P,\r\n) => Blob<P>;\r\nexport const cstr = _cstr as <P extends string = \"\">(property?: P) => Layout<string, P>;\r\nexport const utf8 = _utf8 as <P extends string = \"\">(maxSpan: number, property?: P) => Layout<string, P>;\r\nexport const bits = _bits as unknown as <T, P extends string = \"\">(\r\n  word: Layout<T>,\r\n  msb?: boolean,\r\n  property?: P,\r\n) => BitStructure<T, P>; // TODO: not quite sure\r\nexport const offset = _offset as unknown as <T, P extends string = \"\">(\r\n  layout: Layout<T, P>,\r\n  offset?: number,\r\n  property?: P,\r\n) => Layout<T, P>;\r\n\r\nexport type GetStructureSchema<T extends Structure> = T extends Structure<any, any, infer S> ? S : unknown;\r\n","import { blob, publicKey, struct, u64, WideBits } from \"../../marshmallow\";\r\n\r\nfunction accountFlagsLayout(property = \"accountFlags\"): WideBits<string> {\r\n  const ACCOUNT_FLAGS_LAYOUT = new WideBits(property);\r\n  ACCOUNT_FLAGS_LAYOUT.addBoolean(\"initialized\");\r\n  ACCOUNT_FLAGS_LAYOUT.addBoolean(\"market\");\r\n  ACCOUNT_FLAGS_LAYOUT.addBoolean(\"openOrders\");\r\n  ACCOUNT_FLAGS_LAYOUT.addBoolean(\"requestQueue\");\r\n  ACCOUNT_FLAGS_LAYOUT.addBoolean(\"eventQueue\");\r\n  ACCOUNT_FLAGS_LAYOUT.addBoolean(\"bids\");\r\n  ACCOUNT_FLAGS_LAYOUT.addBoolean(\"asks\");\r\n  return ACCOUNT_FLAGS_LAYOUT;\r\n}\r\n\r\nexport const MARKET_STATE_LAYOUT_V2 = struct([\r\n  blob(5),\r\n  accountFlagsLayout(\"accountFlags\"),\r\n  publicKey(\"ownAddress\"),\r\n  u64(\"vaultSignerNonce\"),\r\n  publicKey(\"baseMint\"),\r\n  publicKey(\"quoteMint\"),\r\n  publicKey(\"baseVault\"),\r\n  u64(\"baseDepositsTotal\"),\r\n  u64(\"baseFeesAccrued\"),\r\n  publicKey(\"quoteVault\"),\r\n  u64(\"quoteDepositsTotal\"),\r\n  u64(\"quoteFeesAccrued\"),\r\n  u64(\"quoteDustThreshold\"),\r\n  publicKey(\"requestQueue\"),\r\n  publicKey(\"eventQueue\"),\r\n  publicKey(\"bids\"),\r\n  publicKey(\"asks\"),\r\n  u64(\"baseLotSize\"),\r\n  u64(\"quoteLotSize\"),\r\n  u64(\"feeRateBps\"),\r\n  u64(\"referrerRebatesAccrued\"),\r\n  blob(7),\r\n]);\r\n"],"mappings":"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","names":[]}