{"version":3,"sources":["../../../src/raydium/token/type.ts"],"sourcesContent":["import { ApiV3Token } from \"../../api/type\";\r\nimport { Token, TokenProps } from \"../../module/token\";\r\n\r\nexport type TokenInfo = ApiV3Token & {\r\n  priority: number;\r\n  userAdded?: boolean;\r\n  type?: string;\r\n};\r\n\r\nexport interface TokenJson {\r\n  symbol: string;\r\n  name: string;\r\n  mint: string;\r\n  decimals: number;\r\n  extensions: {\r\n    coingeckoId?: string;\r\n  };\r\n  icon: string;\r\n  hasFreeze?: boolean;\r\n}\r\n\r\nexport type SplToken = TokenProps & {\r\n  icon: string;\r\n  id: string;\r\n  extensions: {\r\n    [key in \"coingeckoId\" | \"website\" | \"whitepaper\"]?: string;\r\n  };\r\n  userAdded?: boolean; // only if token is added by user\r\n};\r\n\r\nexport type LpToken = Token & {\r\n  isLp: true;\r\n  base: SplToken;\r\n  quote: SplToken;\r\n  icon: string;\r\n  /** mint. for `<TokenSelector>`*/\r\n  id: string;\r\n  extensions: {\r\n    [key in \"coingeckoId\" | \"website\" | \"whitepaper\"]?: string;\r\n  };\r\n};\r\n"],"mappings":"kWAAA","names":[]}