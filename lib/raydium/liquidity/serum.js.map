{"version":3,"sources":["../../../src/raydium/liquidity/serum.ts","../../../src/common/logger.ts","../../../src/raydium/liquidity/constant.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\r\nimport { createLogger } from \"../../common/logger\";\r\nimport { SerumVersion } from \"../serum\";\r\nimport { LIQUIDITY_VERSION_TO_SERUM_VERSION } from \"./constant\";\r\n\r\nconst logger = createLogger(\"Raydium_liquidity_serum\");\r\n\r\nexport function getSerumVersion(version: number): SerumVersion {\r\n  const serumVersion = LIQUIDITY_VERSION_TO_SERUM_VERSION[version];\r\n  if (!serumVersion) logger.logWithError(\"invalid version\", \"version\", version);\r\n\r\n  return serumVersion;\r\n}\r\n\r\nexport function getSerumAssociatedAuthority({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }): {\r\n  publicKey: PublicKey;\r\n  nonce: number;\r\n} {\r\n  const seeds = [marketId.toBuffer()];\r\n\r\n  let nonce = 0;\r\n  let publicKey: PublicKey;\r\n\r\n  while (nonce < 100) {\r\n    try {\r\n      const seedsWithNonce = seeds.concat(Buffer.from([nonce]), Buffer.alloc(7));\r\n      publicKey = PublicKey.createProgramAddressSync(seedsWithNonce, programId);\r\n    } catch (err) {\r\n      if (err instanceof TypeError) {\r\n        throw err;\r\n      }\r\n      nonce++;\r\n      continue;\r\n    }\r\n    return { publicKey, nonce };\r\n  }\r\n\r\n  logger.logWithError(\"unable to find a viable program address nonce\", \"params\", {\r\n    programId,\r\n    marketId,\r\n  });\r\n  throw new Error(\"unable to find a viable program address nonce\");\r\n}\r\n","import { get, set } from \"lodash\";\r\n\r\nexport type ModuleName = \"Common.Api\";\r\n\r\nexport enum LogLevel {\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Debug,\r\n}\r\nexport class Logger {\r\n  private logLevel: LogLevel;\r\n  private name: string;\r\n  constructor(params: { name: string; logLevel?: LogLevel }) {\r\n    this.logLevel = params.logLevel !== undefined ? params.logLevel : LogLevel.Error;\r\n    this.name = params.name;\r\n  }\r\n\r\n  set level(logLevel: LogLevel) {\r\n    this.logLevel = logLevel;\r\n  }\r\n  get time(): string {\r\n    return Date.now().toString();\r\n  }\r\n  get moduleName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  private isLogLevel(level: LogLevel): boolean {\r\n    return level <= this.logLevel;\r\n  }\r\n\r\n  public error(...props): Logger {\r\n    if (!this.isLogLevel(LogLevel.Error)) return this;\r\n    console.error(this.time, this.name, \"sdk logger error\", ...props);\r\n    return this;\r\n  }\r\n\r\n  public logWithError(...props): Logger {\r\n    // this.error(...props)\r\n    const msg = props.map((arg) => (typeof arg === \"object\" ? JSON.stringify(arg) : arg)).join(\", \");\r\n    throw new Error(msg);\r\n  }\r\n\r\n  public warning(...props): Logger {\r\n    if (!this.isLogLevel(LogLevel.Warning)) return this;\r\n    console.warn(this.time, this.name, \"sdk logger warning\", ...props);\r\n    return this;\r\n  }\r\n\r\n  public info(...props): Logger {\r\n    if (!this.isLogLevel(LogLevel.Info)) return this;\r\n    console.info(this.time, this.name, \"sdk logger info\", ...props);\r\n    return this;\r\n  }\r\n\r\n  public debug(...props): Logger {\r\n    if (!this.isLogLevel(LogLevel.Debug)) return this;\r\n    console.debug(this.time, this.name, \"sdk logger debug\", ...props);\r\n    return this;\r\n  }\r\n}\r\n\r\nconst moduleLoggers: { [key in ModuleName]?: Logger } = {};\r\nconst moduleLevels: { [key in ModuleName]?: LogLevel } = {};\r\n\r\nexport function createLogger(moduleName: string): Logger {\r\n  let logger = get(moduleLoggers, moduleName);\r\n  if (!logger) {\r\n    // default level is error\r\n    const logLevel = get(moduleLevels, moduleName);\r\n\r\n    logger = new Logger({ name: moduleName, logLevel });\r\n    set(moduleLoggers, moduleName, logger);\r\n  }\r\n\r\n  return logger;\r\n}\r\n\r\nexport function setLoggerLevel(moduleName: string, level: LogLevel): void {\r\n  set(moduleLevels, moduleName, level);\r\n\r\n  const logger = get(moduleLoggers, moduleName);\r\n  if (logger) logger.level = level;\r\n}\r\n","import BN from \"bn.js\";\r\nimport { SerumVersion } from \"../serum\";\r\n\r\nexport const LIQUIDITY_FEES_NUMERATOR = new BN(25);\r\nexport const LIQUIDITY_FEES_DENOMINATOR = new BN(10000);\r\n\r\n// liquidity version => serum version\r\nexport const LIQUIDITY_VERSION_TO_SERUM_VERSION: {\r\n  [key in 4 | 5]?: SerumVersion;\r\n} = {\r\n  4: 3,\r\n  5: 3,\r\n};\r\n"],"mappings":"6iBAAA,4FAAA,MAA0B,2BCA1B,MAAyB,kBAUlB,WAAa,CAGlB,YAAY,EAA+C,CACzD,KAAK,SAAW,EAAO,WAAa,OAAY,EAAO,SAAW,EAClE,KAAK,KAAO,EAAO,IACrB,IAEI,OAAM,EAAoB,CAC5B,KAAK,SAAW,CAClB,IACI,OAAe,CACjB,MAAO,MAAK,IAAI,EAAE,SAAS,CAC7B,IACI,aAAqB,CACvB,MAAO,MAAK,IACd,CAEQ,WAAW,EAA0B,CAC3C,MAAO,IAAS,KAAK,QACvB,CAEO,SAAS,EAAe,CAC7B,MAAK,MAAK,WAAW,CAAc,EACnC,SAAQ,MAAM,KAAK,KAAM,KAAK,KAAM,mBAAoB,GAAG,CAAK,EACzD,MAFsC,IAG/C,CAEO,gBAAgB,EAAe,CAEpC,GAAM,GAAM,EAAM,IAAI,AAAC,GAAS,MAAO,IAAQ,SAAW,KAAK,UAAU,CAAG,EAAI,CAAI,EAAE,KAAK,IAAI,EAC/F,KAAM,IAAI,OAAM,CAAG,CACrB,CAEO,WAAW,EAAe,CAC/B,MAAK,MAAK,WAAW,CAAgB,EACrC,SAAQ,KAAK,KAAK,KAAM,KAAK,KAAM,qBAAsB,GAAG,CAAK,EAC1D,MAFwC,IAGjD,CAEO,QAAQ,EAAe,CAC5B,MAAK,MAAK,WAAW,CAAa,EAClC,SAAQ,KAAK,KAAK,KAAM,KAAK,KAAM,kBAAmB,GAAG,CAAK,EACvD,MAFqC,IAG9C,CAEO,SAAS,EAAe,CAC7B,MAAK,MAAK,WAAW,CAAc,EACnC,SAAQ,MAAM,KAAK,KAAM,KAAK,KAAM,mBAAoB,GAAG,CAAK,EACzD,MAFsC,IAG/C,CACF,EAEM,EAAkD,CAAC,EACnD,EAAmD,CAAC,EAEnD,WAAsB,EAA4B,CACvD,GAAI,GAAS,UAAI,EAAe,CAAU,EAC1C,GAAI,CAAC,EAAQ,CAEX,GAAM,GAAW,UAAI,EAAc,CAAU,EAE7C,EAAS,GAAI,GAAO,CAAE,KAAM,EAAY,UAAS,CAAC,EAClD,UAAI,EAAe,EAAY,CAAM,CACvC,CAEA,MAAO,EACT,CC7EA,MAAe,oBAGF,EAA2B,GAAI,WAAG,EAAE,EACpC,EAA6B,GAAI,WAAG,GAAK,EAGzC,EAET,CACF,EAAG,EACH,EAAG,CACL,EFPA,GAAM,GAAS,EAAa,yBAAyB,EAE9C,WAAyB,EAA+B,CAC7D,GAAM,GAAe,EAAmC,GACxD,MAAK,IAAc,EAAO,aAAa,kBAAmB,UAAW,CAAO,EAErE,CACT,CAEO,WAAqC,CAAE,YAAW,YAGvD,CACA,GAAM,GAAQ,CAAC,EAAS,SAAS,CAAC,EAE9B,EAAQ,EACR,EAEJ,KAAO,EAAQ,KAAK,CAClB,GAAI,CACF,GAAM,GAAiB,EAAM,OAAO,OAAO,KAAK,CAAC,CAAK,CAAC,EAAG,OAAO,MAAM,CAAC,CAAC,EACzE,EAAY,YAAU,yBAAyB,EAAgB,CAAS,CAC1E,OAAS,EAAP,CACA,GAAI,YAAe,WACjB,KAAM,GAER,IACA,QACF,CACA,MAAO,CAAE,YAAW,OAAM,CAC5B,CAEA,QAAO,aAAa,gDAAiD,SAAU,CAC7E,YACA,UACF,CAAC,EACK,GAAI,OAAM,+CAA+C,CACjE","names":[]}